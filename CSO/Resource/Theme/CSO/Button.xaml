<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:UICustom="clr-namespace:UICustom">

    <!-- Brushes for Buttons -->
    <SolidColorBrush x:Key="ButtonNormalBrush" Color="#FF15A4FA"/>
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="ButtonDisabledBrush" Color="#FFE8F0FA"/>
    <SolidColorBrush x:Key="ButtonNormalTextBrush" Color="White"/>
    <SolidColorBrush x:Key="ButtonHoverTextBrush" Color="#FF15A4FA"/>
    <SolidColorBrush x:Key="ButtonDisabledTextBrush" Color="#FF99AAC8"/>
    <SolidColorBrush x:Key="ButtonLoginBrush" Color="#d7b740"/>
    <SolidColorBrush x:Key="ButtonLoginHoverBrush" Color="#c1a640"/>

    <!-- Login Button style -->
    <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="125" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Button.FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="Button.FontSize" Value="14"></Setter>
        <Setter Property="Button.BorderThickness" Value="0"></Setter>
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource ButtonLoginBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource MediumBaseBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonLoginBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonLoginHoverBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{StaticResource ButtonLoginHoverBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </MultiTrigger>
        </Style.Triggers>

    </Style>

    <!-- Main Button style -->
    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="125" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Button.FontFamily" Value="Segoe UI"></Setter>
        <Setter Property="Button.FontSize" Value="14"></Setter>
        <Setter Property="Button.BorderThickness" Value="0"></Setter>
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource MediumMainBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource MediumBaseBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="{StaticResource MediumMainBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkMainBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="{StaticResource DarkMainBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
            </MultiTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource DarkBaseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource DarkBaseBrush}"/>
                <Setter Property="Background" Value="{StaticResource LightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource MediumMainBrush}"/>
                <Setter Property="Background" Value="{StaticResource LightBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource MediumMainBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DarkMainBrush}"/>
                <Setter Property="Background" Value="{StaticResource LightMainBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkMainBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{StaticResource DarkMainBrush}"/>
                <Setter Property="Background" Value="{StaticResource LightMainBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkMainBrush}"/>
            </MultiTrigger>
        </Style.Triggers>

    </Style>


    <SolidColorBrush x:Key="ButtonActionNormalBrush" Color="White"/>
    <SolidColorBrush x:Key="ButtonActionHoverBrush" Color="#FF7B8BA4"/>

    <!-- Menu Action Button style -->
    <Style x:Key="MenuActionButtonStyle" TargetType="{x:Type UICustom:ImageButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="25,0,25,0" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="Button.FontFamily" Value="Segoe UI"/>
        <Setter Property="Button.FontSize" Value="12"/>
        <Setter Property="Button.BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ButtonActionNormalBrush}" />
        <Setter Property="ImageSize" Value="16" />
    </Style>

    <SolidColorBrush x:Key="FormActionButtonNormalBrush" Color="#FF7787A1"/>
    <SolidColorBrush x:Key="FormActionButtonHoverBrush" Color="#FF15A4FA"/>

    <!-- Form Action Button style -->
    <Style x:Key="FormActionButtonStyle" TargetType="{x:Type UICustom:ImageButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="25,0,25,0" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Button.FontFamily" Value="Segoe UI"/>
        <Setter Property="Button.FontSize" Value="12"/>
        <Setter Property="Button.BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
        <Setter Property="ImageSize" Value="16" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UICustom:ImageButton}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <Image x:Name="ButtonImage" 
                                   Source="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding HoverImage, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Grid" Property="TextBlock.Foreground" Value="{StaticResource FormActionButtonHoverBrush}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Grid" Property="TextBlock.Foreground" Value="{StaticResource FormActionButtonNormalBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ButtonImage" Property="Source" Value="{Binding DisabledImage, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Grid" Property="TextBlock.Foreground" Value="{StaticResource DarkBaseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>